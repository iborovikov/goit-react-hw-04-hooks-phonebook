{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/Form.js","Components/Filter/filter.js","Components/Contacts/Contact.js","Components/Contacts/ContactList.js","App.js","index.js","Components/Filter/filter.module.css"],"names":["module","exports","Form","onFormSubmit","useState","name","setName","phoneNumber","setPhoneNumber","handleInputChange","e","type","currentTarget","value","alert","className","s","form","onSubmit","preventDefault","label","input","onChange","pattern","title","required","btn","Filter","onFilterInputChange","filter","Contact","removeContact","contacts","deleteContact","id","map","number","onClick","ContactList","App","setContact","setFilter","isFirstRender","useRef","normalizedContact","toLowerCase","visibleContacts","contact","includes","useEffect","localStoregeContacts","localStorage","getItem","parsedContacts","JSON","parse","current","setItem","stringify","find","isNameInList","shortid","generate","c","addContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89aa87f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1ZRPr\",\"btn\":\"Form_btn__1_TN-\",\"label\":\"Form_label__3Nyah\",\"input\":\"Form_input__3f-jI\"};","import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Form/Form.module.css'\r\n\r\n\r\nfunction Form({ onFormSubmit }) {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n    const resetFormInput = () => {\r\n        setName('');\r\n        setPhoneNumber('');\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const type = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'phoneNumber':\r\n                setPhoneNumber(value)\r\n                break;\r\n            default: alert('invalid type')\r\n        };\r\n    };\r\n\r\n    const onSbmit = (e) => {\r\n        e.preventDefault();\r\n        onFormSubmit(name, phoneNumber);\r\n        resetFormInput();\r\n    };\r\n        \r\n    return (\r\n        <form className={s.form} onSubmit={onSbmit}>\r\n            <label className={s.label}>Name\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.label}>Number\r\n                <input\r\n                    className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"phoneNumber\"\r\n                    value={phoneNumber}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n            </label>\r\n            <button className={s.btn} type=\"submit\" >Add contact</button>\r\n        </form>\r\n    );\r\n};\r\nexport default Form\r\n\r\nForm.propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired\r\n\r\n}","import PropTypes from 'prop-types';\r\nimport s from '../Filter/filter.module.css'\r\n\r\nfunction Filter ({onFilterInputChange, filter}) {\r\n\r\n    const handleInputChange = (e) => {\r\n        onFilterInputChange(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleInputChange}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    onFilterInputChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nfunction Contact ({removeContact, contacts}) {\r\n\r\n    const deleteContact = (e) => {\r\n        removeContact(e.currentTarget.id)\r\n    };\r\n\r\n    return (\r\n        contacts.map(({ name, number, id }) =>\r\n            <li key={id}>{name}: {number} <button type='button' id={id} onClick={deleteContact}>Delete</button></li>)\r\n    );\r\n\r\n};\r\n\r\nexport default Contact\r\n\r\nContact.propTypes = {\r\n    removeContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired\r\n    }))\r\n}","import PropTypes from 'prop-types';\r\nimport Contact from \"./Contact\";\r\n\r\nfunction ContactList ({contacts, removeContact}) {\r\n\r\n    return (\r\n    <ul>\r\n       <Contact removeContact={removeContact} contacts={contacts} />\r\n    </ul>\r\n    );\r\n\r\n};\r\nexport default ContactList\r\n\r\nContactList.propTypes = {\r\n    removeContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired\r\n    }))\r\n};","import { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Form from './Components/Form/Form'\nimport Filter from './Components/Filter/filter'\nimport ContactList from './Components/Contacts/ContactList';\nimport shortid from 'shortid';\n\nfunction App() {\n  const [contacts, setContact] = useState([]);\n  const [filter, setFilter] = useState('');\n  const isFirstRender = useRef(true);\n\n  const normalizedContact = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedContact));\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number\n    }\n    setContact(c => [...c, contact])\n  };\n  \n  const removeContact = (id) => {\n    setContact(c => c.filter(contact => contact.id !== id))\n  };\n\n  const isNameInList = (name) => contacts.find(contact =>\n      contact.name.toLowerCase() === name.toLowerCase());\n\n  const onFormSubmit = (name, number) => {\n    if (isNameInList(name)) {\n      setFilter('');\n      return alert(`${name} is already in contacts`)\n    };\n    addContact(name, number);\n    setFilter('');\n  };\n  \n  useEffect(() => {\n    const localStoregeContacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(localStoregeContacts)\n\n    if (isFirstRender.current) {\n      setContact(parsedContacts)\n      isFirstRender.current = false\n    };\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n    \n  }, [contacts]);\n  \n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form onFormSubmit={onFormSubmit} />\n      <h2>Contacts</h2>\n      <Filter onFilterInputChange={setFilter} filter={filter} />\n      <ContactList contacts={visibleContacts} removeContact={removeContact} />\n    </>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__3ZbVO\"};"],"sourceRoot":""}